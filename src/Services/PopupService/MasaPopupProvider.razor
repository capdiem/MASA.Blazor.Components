@namespace Masa.Blazor.Experimental.Components
@inject IPopupProvider PopupProvider
@implements IDisposable

<CascadingValue Value="this">
    @foreach (var item in PopupProvider.GetItems())
    {
        <CascadingValue @key="item" Value="item">
            <DynamicComponent Type="item.ComponentType" Parameters="item.Parameters"></DynamicComponent>
        </CascadingValue>
    }
</CascadingValue>

@code {

    [Parameter]
    public Action<ConfirmParameters>? ConfirmParameters { get; set; }

    [Parameter]
    public Action<AlertParameters>? AlertParameters { get; set; }

    protected override void OnInitialized()
    {
        PopupProvider.StateChanged += OnStateChanged;
    }

    private void OnStateChanged(object? sender, EventArgs e)
    {
        InvokeAsync(() => StateHasChanged());
    }

    public void Dispose()
    {
        PopupProvider.StateChanged -= OnStateChanged;
    }

}